# Copyright 2015 OpenStack Foundation
#
#    Licensed under the Apache License, Version 2.0 (the "License"); you may
#    not use this file except in compliance with the License. You may obtain
#    a copy of the License at
#
#         http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
#    License for the specific language governing permissions and limitations
#    under the License.
#

"""openvpn db

Revision ID: 204d17871a7f
Revises: c4a558e0931
Create Date: 2015-03-23 05:10:02.676756

"""

# revision identifiers, used by Alembic.
revision = '204d17871a7f'
down_revision = 'c4a558e0931'

from alembic import op
import sqlalchemy as sa


from alembic import op
import sqlalchemy as sa
from neutron.common import core as sql

from neutron.db import migration

migration_for_plugins = [
    'neutron.plugins.ml2.plugin.Ml2Plugin'
]

def upgrade(active_plugins=None, options=None):
    if not migration.should_run(active_plugins, migration_for_plugins):
        return

    op.create_table(
        'openvpnconnections',
        sa.Column('tenant_id', sa.String(length=255), nullable=True),
        sa.Column('id', sa.String(length=36), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=True),
        sa.Column('name', sa.String(length=255), nullable=True),
        sa.Column('description', sa.String(length=255), nullable=True),
        sa.Column('peer_cidr', sa.String(length=255), nullable=False),
        sa.Column('protocol', sa.String(length=255), nullable=False),
        sa.Column('port', sa.Integer(), nullable=False),
        sa.Column('status', sa.String(length=16), nullable=False),
        sa.Column('ta_key', sql.JsonBlob(), nullable=False),
        sa.Column('zip_file', sql.Base64Blob(), nullable=False),
        sa.Column('admin_state_up', sa.Boolean(), nullable=False),
        sa.Column('router_id', sa.String(length=36), nullable=False),
        sa.ForeignKeyConstraint(['router_id'], ['routers.id'], ),
        sa.PrimaryKeyConstraint('id'),
        mysql_charset='utf8',
    )
    ### end Alembic commands ###


def downgrade(active_plugins=None, options=None):
    if not migration.should_run(active_plugins, migration_for_plugins):
        return

    ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('openvpnconnections')
    ### end Alembic commands ###
